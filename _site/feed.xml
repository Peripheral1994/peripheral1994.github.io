<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Peter Richmond</title>
    <description>A blog for things revolving around the technology that runs the web!
</description>
    <link>http://peripheral1994.github.io/</link>
    <atom:link href="http://peripheral1994.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 29 Aug 2015 14:10:53 -0700</pubDate>
    <lastBuildDate>Sat, 29 Aug 2015 14:10:53 -0700</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>The Stable Sort</title>
        <description>&lt;p&gt;When it comes to sorting a list, stability of the algorithm is something that is often talked about in documentation, but not always understood by those just getting into programming. While working through implementing a simple stable insertion sort today, a few colleagues of mine were curious about why algorithms would be stable.&lt;/p&gt;

&lt;p&gt;To answer the first obvious question: “What is a ‘stable’ sort?” A stable sort is one that maintains the order of the items in the list that have the same sorted value. For instance, say we had a list of 4 people: “Sally Sue, Jason Bourne, Jason Steel, and Manny Justice.” In this sort, we have chosen to sort based upon the first letter of each person’s first name. It’s easy to determine that the last two items of this list would be Manny Justice and Sally Sue, but what about the first two? Depending on how you create your algorithm, as well as your intention of what the algorithm should do, what happens can vary.&lt;/p&gt;

&lt;p&gt;However, since this is a stable sort we’re talking about, the answer is actually relatively simple. Since Jason Bourne is earlier in the list than Jason Steel, Bourne should be first in the list. But why does this matter? Remember that numbers and simple names aren’t the only things that can be sorted, and often times we can only sort based upon a single facet of a whole object (imagine sorting 20 objects, some of which have similar values - by which we sort - but entirely different properties. It can be important that the specific order of these objects remains in place relative to that single value that we sorted by). It’s for this reason that a stable sort can be important. So consider which sorting algorithms you use wisely!&lt;/p&gt;

&lt;p&gt;But what if you don’t care about the order of individual objects? What if you just need an array of numbers sorted for some data? Then feel free to use unstable sorts! In many cases, unstable sorts will be quicker than their stable counterparts, although they won’t keep track of order. So use the sorts that will perform best for you, while still keeping in mind your needs for your programs!&lt;/p&gt;
</description>
        <pubDate>Sat, 29 Aug 2015 07:10:21 -0700</pubDate>
        <link>http://peripheral1994.github.io/stable/sorting/algorithm/2015/08/29/The-Stable-Sort.html</link>
        <guid isPermaLink="true">http://peripheral1994.github.io/stable/sorting/algorithm/2015/08/29/The-Stable-Sort.html</guid>
        
        
        <category>stable</category>
        
        <category>sorting</category>
        
        <category>algorithm</category>
        
      </item>
    
      <item>
        <title>Talking Out Your Problems</title>
        <description>&lt;p&gt;In the past few days, I have had the pleasure of working with an interviewer who was kind enough to give me a few mock interviews relating to an upcoming interview I hope to be selected for. As one of the core parts of the tech interview is the technical/whiteboard session, I was given plenty of time going over this portion of the experience.&lt;/p&gt;

&lt;p&gt;First off, your thoughts regarding the problem should be put on mental speaker-phone for the duration of the problem. Let the interviewer hear your rationale for everything you do. Everything you say about why you did a method a certain way or chose a certain algorithm lets the interviewer know that you are constantly thinking, and not just mindlessly throwing out ideas. This methodology doubles down if you become stuck or otherwise believe you’ve erred somewhere. Talk to the INTERVIEWER (not to yourself!) and understand that you are actually teaching them at this juncture. They are here to learn about you and your methods and experience. The right answer isn’t necessarily the most important one - the way you think and approach adversity is far more valuable than being able to build an algorithm to count the number of golf balls in a bus given an hour to code.&lt;/p&gt;

&lt;p&gt;That said, mind how you speak out loud. Ask a friend to watch you one day and give you feedback on how you speak. Do you maintain eye contact? Do you talk too slow or too fast? Each oppotunity you find to improve how you communicate in an interview makes you a far more attractive candidate, versus facing the wall for a few hours and coding to yourself. Now, perhaps this isn’t the kind of culture fit you seek - perhaps you prefer being in solitude and just focusing on getting your work done. This can easily be averted by asking culture questions during your initial screening interviews!&lt;/p&gt;

&lt;p&gt;The screening interview is often the most wasted opportunity of the entire process. Your potential employers are not the only ones trying to determine if they want to continue the process! This is your chance to ask the interviewer core questions about the company. What is the team you’re applying for like? Are they very social, or do they prefer solitude? What about work hours and potential benefits? All of these questions are a chance for you to not only gain a deeper understanding of the company and decide if it’s worth your time, but also a chance to build rapport with the interviewer! A candidate who is genuinely interested in the company itself is far more attractive than one who is here solely because there’s a job opening.&lt;/p&gt;
</description>
        <pubDate>Sat, 15 Aug 2015 06:31:21 -0700</pubDate>
        <link>http://peripheral1994.github.io/tech/interview/2015/08/15/Talking-Out-Your-Problems.html</link>
        <guid isPermaLink="true">http://peripheral1994.github.io/tech/interview/2015/08/15/Talking-Out-Your-Problems.html</guid>
        
        
        <category>tech</category>
        
        <category>interview</category>
        
      </item>
    
  </channel>
</rss>
